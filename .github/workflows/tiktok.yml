name: tiktok-random-5-slots

on:
  workflow_dispatch:
  # Laisse ce cron pour la prod : le script ne postera que sur les 5 minutes tirées
  schedule:
    - cron: "*/5 * * * *"

permissions:
  contents: write

jobs:
  post:
    runs-on: ubuntu-latest
    steps:
      # 1) Ton dépôt
      - name: Checkout repository
        uses: actions/checkout@v4

      # 2) Clone du projet upstream
      - name: Clone upstream uploader
        run: |
          rm -rf upstream
          git clone https://github.com/makiisthenes/TiktokAutoUploader upstream

      # 3) Python + deps (patch pour le conflit selenium)
      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps (patched)
        run: |
          python -m pip install --upgrade pip
          # Résout le conflit: undetected-chromedriver requiert selenium >= 4.18
          pip install "selenium>=4.20.0" undetected-chromedriver
          # Installe le requirements upstream sans résoudre les deps (évite conflits)
          pip install -r upstream/requirements.txt --no-deps
          # Google Drive API
          pip install google-api-python-client google-auth google-auth-oauthlib

      # 4) Node (signature TikTok du projet)
      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install node deps for signature
        run: |
          cd upstream/tiktok_uploader/tiktok-signature
          npm i

      # 5) (Optionnel) Build du bundle de signature si le script existe
      - name: Build signature bundle if present
        run: |
          if [ -f upstream/tiktok_uploader/tiktok-signature/build.mjs ]; then
            node upstream/tiktok_uploader/tiktok-signature/build.mjs || true
          fi

      # 6) Lancer le serveur de signature en arrière-plan (si présent)
      - name: Start signature server
        run: |
          if [ -f upstream/tiktok_uploader/tiktok-signature/listen.js ]; then
            node upstream/tiktok_uploader/tiktok-signature/listen.js &
          elif [ -f upstream/tiktok_uploader/tiktok-signature/index.js ]; then
            node upstream/tiktok_uploader/tiktok-signature/index.js --serve &
          else
            echo "No signature server entry found (listen.js/index.js)."
          fi
          sleep 2

      # 7) Créer config.txt (MAJUSCULES + "=") à la racine + copie dans upstream/
      - name: Create config.txt for uploader (root + upstream)
        run: |
          {
            echo 'COOKIES_DIR=./CookiesDir'
            echo 'VIDEOS_DIR=./VideosDirPath'
            echo 'POST_PROCESSING_VIDEO_PATH=./VideosDirPath'
            echo 'IMAGEMAGICK_FONT=Arial'
            echo 'IMAGEMAGICK_FONT_SIZE=80'
            echo 'IMAGEMAGICK_TEXT_FOREGROUND_COLOR=white'
            echo 'IMAGEMAGICK_TEXT_BACKGROUND_COLOR=black'
            echo 'TMP_YOUTUBE_VIDEO_DIR='
            echo 'LANG=en'
            echo 'TIKTOK_BASE_URL=https://www.tiktok.com/upload?lang='
            echo 'IMAGEMAGICK_BINARY='
          } > config.txt
          cp config.txt upstream/config.txt

      # 8) Lancer le runner (pas de FORCE_POST en prod)
      - name: Run Drive runner
        env:
          GDRIVE_SA_JSON_B64: ${{ secrets.GDRIVE_SA_JSON_B64 }}
          GDRIVE_FOLDER_IDS:  ${{ secrets.GDRIVE_FOLDER_IDS }}
          TIKTOK_USERNAME:    ${{ secrets.TIKTOK_USERNAME }}
          COOKIES_BASE64:     ${{ secrets.COOKIES_BASE64 }}
        run: python gdrive_runner.py

      # 9) Commit de l'état (ignore dossiers temporaires)
      - name: Commit state if changed
        run: |
          rm -rf CookiesDir upstream
          if [[ -n "$(git status --porcelain state)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add state/*.json
            git commit -m "update state/schedule"
            git push --force
          else
            echo "Aucun changement dans state/, rien à commit."
          fi
