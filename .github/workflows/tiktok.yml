name: tiktok-random-5-slots

on:
  workflow_dispatch:
  schedule:
    - cron: "*/5 * * * *"

permissions:
  contents: write

jobs:
  post:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Clone upstream uploader
        run: |
          rm -rf upstream
          git clone https://github.com/makiisthenes/TiktokAutoUploader upstream

      - name: Set up Python
        uses: actions/setup-python@v5
        with:
          python-version: "3.11"

      - name: Install Python deps (patched)
        run: |
          python -m pip install --upgrade pip
          pip install "selenium>=4.20.0" undetected-chromedriver
          pip install -r upstream/requirements.txt --no-deps
          pip install google-api-python-client google-auth google-auth-oauthlib

      - name: Set up Node
        uses: actions/setup-node@v4
        with:
          node-version: "20"

      - name: Install node deps for signature
        run: |
          cd upstream/tiktok_uploader/tiktok-signature
          npm i

      - name: Ensure signature path exists (symlink + fallback browser.js)
        shell: bash
        run: |
          set -e
          # Lien symbolique attendu par l’uploader (chemin racine)
          ln -s upstream/tiktok_uploader tiktok_uploader 2>/dev/null || true
          # Si browser.js est manquant, on crée un fallback minimal
          if [ ! -f tiktok_uploader/tiktok-signature/browser.js ]; then
            mkdir -p tiktok_uploader/tiktok-signature
            cat > tiktok_uploader/tiktok-signature/browser.js <<'JS'
const Signer = require("./index");
const url = process.argv[2];
const userAgent = process.argv[3];

(async function main() {
  try {
    const signer = new Signer(url, userAgent);
    await signer.init();
    const sign = await signer.sign(url);
    const navigator = await signer.navigator();
    const output = JSON.stringify({
      status: "ok",
      data: { ...sign, navigator }
    });
    console.log(output);
    await signer.close();
  } catch (err) {
    console.error(err);
    process.exit(1);
  }
})();
JS
          fi

      - name: Build signature bundle if present
        run: |
          if [ -f upstream/tiktok_uploader/tiktok-signature/build.mjs ]; then
            node upstream/tiktok_uploader/tiktok-signature/build.mjs || true
          fi

      - name: Create config.txt for uploader (root + upstream)
        run: |
          {
            echo 'COOKIES_DIR=./CookiesDir'
            echo 'VIDEOS_DIR=./VideosDirPath'
            echo 'POST_PROCESSING_VIDEO_PATH=./VideosDirPath'
            echo 'IMAGEMAGICK_FONT=Arial'
            echo 'IMAGEMAGICK_FONT_SIZE=80'
            echo 'IMAGEMAGICK_TEXT_FOREGROUND_COLOR=white'
            echo 'IMAGEMAGICK_TEXT_BACKGROUND_COLOR=black'
            echo 'TMP_YOUTUBE_VIDEO_DIR='
            echo 'LANG=en'
            echo 'TIKTOK_BASE_URL=https://www.tiktok.com/upload?lang='
            echo 'IMAGEMAGICK_BINARY='
          } > config.txt
          cp config.txt upstream/config.txt

      - name: Run Drive runner
        env:
          GDRIVE_SA_JSON_B64: ${{ secrets.GDRIVE_SA_JSON_B64 }}
          GDRIVE_FOLDER_IDS:  ${{ secrets.GDRIVE_FOLDER_IDS }}
          TIKTOK_USERNAME:    ${{ secrets.TIKTOK_USERNAME }}
          COOKIES_BASE64:     ${{ secrets.COOKIES_BASE64 }}
        run: python gdrive_runner.py

      - name: Commit state if changed
        run: |
          rm -rf CookiesDir upstream
          if [[ -n "$(git status --porcelain state)" ]]; then
            git config user.name "github-actions[bot]"
            git config user.email "41898282+github-actions[bot]@users.noreply.github.com"
            git add state/*.json
            git commit -m "update state/schedule"
            git push --force
          else
            echo "Aucun changement dans state/, rien à commit."
          fi
